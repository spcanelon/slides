---
format: 
  revealjs:
    theme: ["default", "css/rladies-spc.scss"]
    disable-layout: false #https://revealjs.com/config/
    code-overflow: wrap
    df-print: default
execute: 
  echo: true
---

# 07-tidyr {visibility="hidden"}

```{r}
#| include: false
library(tidyverse)
library(palmerpenguins)
penguins <- palmerpenguins::penguins
```


## {background-image="https://images.unsplash.com/photo-1591792111137-5b8219d5fad6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=4350&q=80" background-position="52% 5%" background-size="cover"}

![](images/drawio/07-tidyr.png){.absolute top=30 left=30 width="100%" fig-alt="Our illustrated penguins have reached the tidyr package! The photo backdrop is a snowy Antarctic wonderland featuring a Gentoo penguin with outstretched flippers"}

::: footer
<span>Photo by <a href="https://unsplash.com/@eadesstudio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">James Eades</a> on <a href="https://unsplash.com/collections/12240655/palmerpenguins/d5aed8c855e26061e5e651d3f180b76d?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></span>
:::

---

## tidyr: info {background-image="images/hex/tidyr.png" background-size="8%" background-position="98% 4%"}

<!--start panels-->
::: {.panel-tabset}

### Overview {.center}

`tidyr` helps us transform our dataset into a [tidy format](https://r4ds.had.co.nz/tidy-data.html)

> There are three interrelated rules which make a dataset tidy:
>
> - Each variable must have its own column.
> - Each observation must have its own row.
> - Each value must have its own cell.
> ![](https://d33wubrfki0l68.cloudfront.net/6f1ddb544fc5c69a2478e444ab8112fb0eea23f8/91adc/images/tidy-1.png){fig-alt="schematic representing the 3 earlier points"}

### Cheatsheet

{{< fa file-pdf >}} PDF: <https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf>
![](images/cheatsheet/07-tidyr.png){fig-alt="tidyr cheatsheet"}

### Reading

<!--start columns-->
:::: {.columns}

::: {.column width="40%"}

![](images/r4ds-cover.png){width="300" fig-alt="R4DS book cover"}

:::

::: {.column width="60%"}

<br><br>

#### R for Data Science: [Ch 12 Tidy data](https://r4ds.had.co.nz/tidy-data.html)

#### Package documentation: <https://tidyr.tidyverse.org>

:::

::::
<!--end columns-->

::: 
<!--end panels-->

## tidyr: exercise {background-image="images/hex/tidyr.png" background-size="8%" background-position="98% 4%"}

<!--start panels-->
::: {.panel-tabset}

### Un-tidying

#### Both penguin datasets are already tidy!

We can pretend that `penguins` wasn't tidy and that it looked instead like `untidy_penguins` below, where **body_mass_g** was recorded separately for *male*, *female*, and *NA* **sex** penguins.

```{r}
untidy_penguins <- penguins |> pivot_wider(names_from = sex, values_from = body_mass_g)
untidy_penguins
```

### Re-tidying

#### Now let's make it tidy again!

We'll use the help of `pivot_longer()`

```{r}
#| code-line-numbers: "2,3,4"
untidy_penguins |>
  pivot_longer(cols = male:`NA`,           
               names_to = "sex",           
               values_to = "body_mass_g")
```

:::
<!--end panels-->
