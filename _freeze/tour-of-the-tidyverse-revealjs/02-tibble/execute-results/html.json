{
  "hash": "94f9cf91671562f8bcf036ed3aeb1ad4",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [\"default\", \"css/rladies-spc.scss\"]\n    disable-layout: false #https://revealjs.com/config/\n    logo: images/hex/tibble.png\n    code-overflow: wrap\n    df-print: default\nexecute: \n  echo: true\n---\n\n\n# 01-readr {visibility=\"hidden\"}\n\n\n\n\n\n\n## {background-image=\"https://images.unsplash.com/photo-1591792111137-5b8219d5fad6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=4350&q=80\" background-position=\"52% 5%\" background-size=\"cover\"}\n\n![](images/pptx/02-tibble.png){.absolute top=30 left=30 width=\"100%\"}\n\n::: footer\n<span>Photo by <a href=\"https://unsplash.com/@eadesstudio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">James Eades</a> on <a href=\"https://unsplash.com/collections/12240655/palmerpenguins/d5aed8c855e26061e5e651d3f180b76d?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\n:::\n\n---\n\n## tibble: info\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Overview {.center}\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n<br><br>\n\n### A `tibble` is much like the `dataframe` in base R, but optimized for use in the Tidyverse.{.center}\n:::\n\n::::\n<!--end columns-->\n\n### Cheatsheet\n\n{{< fa file-pdf >}} PDF: <https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf>\n![](images/cheatsheet/02-tibble-tidyr.png){width=65%}\n\n### Reading\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n![](images/r4ds-cover.png){width=\"300\"}\n\n:::\n\n::: {.column width=\"60%\"}\n\n<br>\n\n### R for Data Science: [Ch 10 Tibbles](https://r4ds.had.co.nz/tibbles.html)\n\n### Package documentation: <https://tibble.tidyverse.org>\n:::\n\n::::\n<!--end columns-->\n\n::: \n<!--end panels-->\n\n## tibble: exercise\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Code\n\n#### Let's take a look at the differences! {.center-x}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# try each of these commands in the console and see if \n# you can spot the differences!\n\nas_tibble(penguins)\nas.data.frame(penguins)\n```\n:::\n\n\n### Result\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tibble(penguins) |> head(4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 8\n  species island    bill_length_mm bill_depth_mm flipper_l…¹ body_…² sex    year\n  <fct>   <fct>              <dbl>         <dbl>       <int>   <int> <fct> <int>\n1 Adelie  Torgersen           39.1          18.7         181    3750 male   2007\n2 Adelie  Torgersen           39.5          17.4         186    3800 fema…  2007\n3 Adelie  Torgersen           40.3          18           195    3250 fema…  2007\n4 Adelie  Torgersen           NA            NA            NA      NA <NA>   2007\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nas.data.frame(penguins) |> head(4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  species    island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n1  Adelie Torgersen           39.1          18.7               181        3750\n2  Adelie Torgersen           39.5          17.4               186        3800\n3  Adelie Torgersen           40.3          18.0               195        3250\n4  Adelie Torgersen             NA            NA                NA          NA\n     sex year\n1   male 2007\n2 female 2007\n3 female 2007\n4   <NA> 2007\n```\n:::\n:::\n\n\n### Chat\n\n#### What differences do you see?\n\nYou might see a `tibble` prints:\n\n- variable classes\n- only 10 rows\n- only as many columns as can fit on the screen\n- `NA`s are highlighted in console so they're easy to spot (font highlighting and styling in `tibble`)\n\nNot so much a concern in an R Markdown file, but noticeable in the console. \n\nPrint method makes it easier to work with large datasets.\n\n### More\n\nThere are a couple of other main differences, namely in **subsetting** and **recycling**. Check them out in [`vignette(\"tibble\")`](https://tibble.tidyverse.org/articles/tibble.html)\n\nTry it out!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvignette(\"tibble\")\n```\n:::\n\n\n:::\n<!--end panels-->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}