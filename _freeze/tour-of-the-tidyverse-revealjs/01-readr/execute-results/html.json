{
  "hash": "73791c7a74454a8725a58c8f03b1cdf5",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [\"default\", \"css/rladies-spc.scss\"]\n    disable-layout: false #https://revealjs.com/config/\n    logo: images/hex/readr.png\n---\n\n\n# 01-readr {visibility=\"hidden\"}\n\n\n\n\n\n\n## {background-image=\"https://images.unsplash.com/photo-1591792111137-5b8219d5fad6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=4350&q=80\" background-position=\"52% 5%\" background-size=\"cover\"}\n\n![](images/pptx/01-readr.png){.absolute top=30 left=30 width=\"100%\"}\n\n::: footer\n<span>Photo by <a href=\"https://unsplash.com/@eadesstudio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">James Eades</a> on <a href=\"https://unsplash.com/collections/12240655/palmerpenguins/d5aed8c855e26061e5e651d3f180b76d?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\n:::\n\n---\n\n## readr: info\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Overview\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n### Importing data is the very first step!\n\n### You can use `readr` to import rectangular data.\n:::\n\n::: {.column width=\"50%\"}\n### You can import...\n\n- comma separated (CSV) files with `read_csv()`\n- tab separated files with `read_tsv()`\n- general delimited files with `read_delim()`\n- fixed width files with `read_fwf()`\n- tabular files where columns are separated by white-space with `read_table()`\n- web log files with `read_log()` \n:::\n\n::::\n<!--end columns-->\n\n### Cheatsheet\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M88 304H80V256H88C101.3 256 112 266.7 112 280C112 293.3 101.3 304 88 304zM192 256H200C208.8 256 216 263.2 216 272V336C216 344.8 208.8 352 200 352H192V256zM224 0V128C224 145.7 238.3 160 256 160H384V448C384 483.3 355.3 512 320 512H64C28.65 512 0 483.3 0 448V64C0 28.65 28.65 0 64 0H224zM64 224C55.16 224 48 231.2 48 240V368C48 376.8 55.16 384 64 384C72.84 384 80 376.8 80 368V336H88C118.9 336 144 310.9 144 280C144 249.1 118.9 224 88 224H64zM160 368C160 376.8 167.2 384 176 384H200C226.5 384 248 362.5 248 336V272C248 245.5 226.5 224 200 224H176C167.2 224 160 231.2 160 240V368zM288 224C279.2 224 272 231.2 272 240V368C272 376.8 279.2 384 288 384C296.8 384 304 376.8 304 368V320H336C344.8 320 352 312.8 352 304C352 295.2 344.8 288 336 288H304V256H336C344.8 256 352 248.8 352 240C352 231.2 344.8 224 336 224H288zM256 0L384 128H256V0z\"/></svg>`{=html} PDF: <https://github.com/rstudio/cheatsheets/raw/main/data-import.pdf>\n![](https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-import-cheatsheet-thumbs.png)\n\n### Reading\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n![](images/r4ds-cover.png){width=\"300\"}\n\n:::\n\n::: {.column width=\"60%\"}\n\n<br>\n\n### R for Data Science: [Ch 11 Data import](https://r4ds.had.co.nz/data-import.html)\n\n### Package documentation: <https://readr.tidyverse.org/>\n:::\n\n::::\n<!--end columns-->\n\n::: \n<!--end panels-->\n\n## readr: exercise\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Read data in\n\n#### Both options below will get you the same dataset! {.center-x}\n\nOption 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# option 1: load using URL ----\nraw_adelie_url <- read_csv(\"https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.219.3&entityid=002f3893385f710df69eeebe893144ff\")\n```\n:::\n\n\nOption 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# option 2: load using filepath ----\nraw_adelie_filepath <- read_csv(\"tutorial/raw_adelie.csv\")\n```\n:::\n\n\n### Save data\n\n<!--start columns-->\n:::: {.columns}\nLucky for us, the `palmerpenguins` üì¶ compiles data from all three species together for us!\n\n::: {.column width=\"45%\"}\n`penguins` contains a clean dataset\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap}\npenguins <- \n  palmerpenguins::penguins \n\nhead(penguins)\n## # A tibble: 6 √ó 8\n##   species island    bill_length_mm bill_depth_mm flipper_l‚Ä¶¬π body_‚Ä¶¬≤ sex    year\n##   <fct>   <fct>              <dbl>         <dbl>       <int>   <int> <fct> <int>\n## 1 Adelie  Torgersen           39.1          18.7         181    3750 male   2007\n## 2 Adelie  Torgersen           39.5          17.4         186    3800 fema‚Ä¶  2007\n## 3 Adelie  Torgersen           40.3          18           195    3250 fema‚Ä¶  2007\n## 4 Adelie  Torgersen           NA            NA            NA      NA <NA>   2007\n## 5 Adelie  Torgersen           36.7          19.3         193    3450 fema‚Ä¶  2007\n## 6 Adelie  Torgersen           39.3          20.6         190    3650 male   2007\n## # ‚Ä¶ with abbreviated variable names ¬π‚Äãflipper_length_mm, ¬≤‚Äãbody_mass_g\n```\n:::\n\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"45%\"}\n`penguins_raw` contains raw data\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap}\npenguins_raw <- \n  palmerpenguins::penguins_raw\n\nhead(penguins_raw)\n## # A tibble: 6 √ó 17\n##   study‚Ä¶¬π Sampl‚Ä¶¬≤ Species Region Island Stage Indiv‚Ä¶¬≥ Clutc‚Ä¶‚Å¥ `Date Egg` Culme‚Ä¶‚Åµ\n##   <chr>     <dbl> <chr>   <chr>  <chr>  <chr> <chr>   <chr>   <date>       <dbl>\n## 1 PAL0708       1 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A1    Yes     2007-11-11    39.1\n## 2 PAL0708       2 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N1A2    Yes     2007-11-11    39.5\n## 3 PAL0708       3 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A1    Yes     2007-11-16    40.3\n## 4 PAL0708       4 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N2A2    Yes     2007-11-16    NA  \n## 5 PAL0708       5 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A1    Yes     2007-11-16    36.7\n## 6 PAL0708       6 Adelie‚Ä¶ Anvers Torge‚Ä¶ Adul‚Ä¶ N3A2    Yes     2007-11-16    39.3\n## # ‚Ä¶ with 7 more variables: `Culmen Depth (mm)` <dbl>,\n## #   `Flipper Length (mm)` <dbl>, `Body Mass (g)` <dbl>, Sex <chr>,\n## #   `Delta 15 N (o/oo)` <dbl>, `Delta 13 C (o/oo)` <dbl>, Comments <chr>, and\n## #   abbreviated variable names ¬π‚ÄãstudyName, ¬≤‚Äã`Sample Number`, ¬≥‚Äã`Individual ID`,\n## #   ‚Å¥‚Äã`Clutch Completion`, ‚Åµ‚Äã`Culmen Length (mm)`\n```\n:::\n\n:::\n\n::::\n<!--end columns-->\n\n:::\n<!--end panels-->\n\n---\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}