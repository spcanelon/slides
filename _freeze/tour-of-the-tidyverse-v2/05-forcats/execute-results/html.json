{
  "hash": "58830d85d6977fc80618e516381802c0",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [\"default\", \"css/rladies-spc.scss\"]\n    disable-layout: false #https://revealjs.com/config/\n    code-overflow: wrap\n    df-print: default\nexecute: \n  echo: true\n---\n\n\n# 05-forcats {visibility=\"hidden\"}\n\n\n\n\n\n\n## {background-image=\"https://images.unsplash.com/photo-1591792111137-5b8219d5fad6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=4350&q=80\" background-position=\"52% 5%\" background-size=\"cover\"}\n\n![](images/drawio/05-forcats.png){.absolute top=30 left=30 width=\"100%\" fig-alt=\"Our illustrated penguins have reached the forcats package! The photo backdrop is a snowy Antarctic wonderland featuring a Gentoo penguin with outstretched flippers\"}\n\n::: footer\n<span>Photo by <a href=\"https://unsplash.com/@eadesstudio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">James Eades</a> on <a href=\"https://unsplash.com/collections/12240655/palmerpenguins/d5aed8c855e26061e5e651d3f180b76d?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\n:::\n\n---\n\n## forcats: info {background-image=\"images/hex/forcats.png\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Overview {.center}\n\n<br><br>\n\n#### `forcats` helps us work with **categorical variables** or factors \n\nThese are variables that have a fixed and known set of possible values, like **species**, **island**, and **sex** in our `penguins` dataset\n\n\n### Cheatsheet\n\n{{< fa file-pdf >}} <https://github.com/rstudio/cheatsheets/raw/main/factors.pdf>\n![](images/cheatsheet/05-forcats.png){width=60% fig-alt=\"forcats cheatsheet\"}\n\n### Reading\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n![](images/r4ds-cover.png){width=\"300\" fig-alt=\"R4DS book cover\"}\n\n:::\n\n::: {.column width=\"60%\"}\n\n<br>\n\n#### R for Data Science: [Ch 15 Factors](https://r4ds.had.co.nz/factors.html)\n\n#### Package documentation: <https://forcats.tidyverse.org>\n\n:::\n\n::::\n<!--end columns-->\n\n::: \n<!--end panels-->\n\n## forcats: exercise {background-image=\"images/hex/forcats.png\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Code\n\nCurrently the **year** variable in `penguins` is continuous from 2007 to 2009\n\nUsually this isn't what we want and we might want to turn it into a categorical variable instead\n\nThe `factor()` function is perfect for this\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins |> mutate(year_factor = factor(year, levels = unique(year)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 9\n   species island    bill_length_mm bill_d…¹ flipp…² body_…³ sex    year year_…⁴\n   <fct>   <fct>              <dbl>    <dbl>   <int>   <int> <fct> <int> <fct>  \n 1 Adelie  Torgersen           39.1     18.7     181    3750 male   2007 2007   \n 2 Adelie  Torgersen           39.5     17.4     186    3800 fema…  2007 2007   \n 3 Adelie  Torgersen           40.3     18       195    3250 fema…  2007 2007   \n 4 Adelie  Torgersen           NA       NA        NA      NA <NA>   2007 2007   \n 5 Adelie  Torgersen           36.7     19.3     193    3450 fema…  2007 2007   \n 6 Adelie  Torgersen           39.3     20.6     190    3650 male   2007 2007   \n 7 Adelie  Torgersen           38.9     17.8     181    3625 fema…  2007 2007   \n 8 Adelie  Torgersen           39.2     19.6     195    4675 male   2007 2007   \n 9 Adelie  Torgersen           34.1     18.1     193    3475 <NA>   2007 2007   \n10 Adelie  Torgersen           42       20.2     190    4250 <NA>   2007 2007   \n# … with 334 more rows, and abbreviated variable names ¹​bill_depth_mm,\n#   ²​flipper_length_mm, ³​body_mass_g, ⁴​year_factor\n```\n:::\n:::\n\n\n### Result\n\nThe result is a new variable **year_factor** with factor levels **2007**, **2008**, and **2009**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_new <- penguins |> mutate(year_factor = factor(year, levels = unique(year)))\npenguins_new |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 9\n  species island    bill_length_mm bill_de…¹ flipp…² body_…³ sex    year year_…⁴\n  <fct>   <fct>              <dbl>     <dbl>   <int>   <int> <fct> <int> <fct>  \n1 Adelie  Torgersen           39.1      18.7     181    3750 male   2007 2007   \n2 Adelie  Torgersen           39.5      17.4     186    3800 fema…  2007 2007   \n3 Adelie  Torgersen           40.3      18       195    3250 fema…  2007 2007   \n4 Adelie  Torgersen           NA        NA        NA      NA <NA>   2007 2007   \n5 Adelie  Torgersen           36.7      19.3     193    3450 fema…  2007 2007   \n6 Adelie  Torgersen           39.3      20.6     190    3650 male   2007 2007   \n# … with abbreviated variable names ¹​bill_depth_mm, ²​flipper_length_mm,\n#   ³​body_mass_g, ⁴​year_factor\n```\n:::\n:::\n\n\n:::: {.columns}\n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(penguins_new$year_factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"factor\"\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(penguins_new$year_factor)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2007\" \"2008\" \"2009\"\n```\n:::\n:::\n\n\n:::\n\n::::\n<!--end columns-->\n\n:::\n<!--end panels-->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}