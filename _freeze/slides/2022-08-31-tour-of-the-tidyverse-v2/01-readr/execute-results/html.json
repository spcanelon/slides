{
  "hash": "a5537552668cfea857e7e137d54683cc",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [\"default\", \"css/rladies-spc.scss\"]\n    disable-layout: false #https://revealjs.com/config/\n    code-overflow: wrap\n    df-print: default\nexecute: \n  echo: true\n---\n\n\n# 01-readr {visibility=\"hidden\"}\n\n\n\n\n\n\n## {background-image=\"https://images.unsplash.com/photo-1591792111137-5b8219d5fad6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=4350&q=80\" background-position=\"52% 5%\" background-size=\"cover\"}\n\n![](images/drawio/01-readr.png){.absolute top=30 left=30 width=\"100%\" fig-alt=\"Our illustrated penguins are starting their tour with the readr package! The photo backdrop is a snowy Antarctic wonderland featuring a Gentoo penguin with outstretched flippers\"}\n\n::: footer\n<span>Photo by <a href=\"https://unsplash.com/@eadesstudio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">James Eades</a> on <a href=\"https://unsplash.com/collections/12240655/palmerpenguins/d5aed8c855e26061e5e651d3f180b76d?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\n:::\n\n---\n\n## readr: info {background-image=\"images/hex/readr.png\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Overview\n\n<br><br>\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n### Importing data is the very first step!\n\nYou can use `readr` to import rectangular data.\n:::\n\n::: {.column width=\"50%\"}\n### You can import...\n\n- comma separated (CSV) files with `read_csv()`\n- tab separated files with `read_tsv()`\n- general delimited files with `read_delim()`\n- fixed width files with `read_fwf()`\n- tabular files where columns are separated by white-space with `read_table()`\n- web log files with `read_log()` \n:::\n\n::::\n<!--end columns-->\n\n### Cheatsheet\n\n{{< fa file-pdf >}} PDF: <https://github.com/rstudio/cheatsheets/raw/main/data-import.pdf>\n![](https://raw.githubusercontent.com/rstudio/cheatsheets/master/pngs/thumbnails/data-import-cheatsheet-thumbs.png){fig-alt=\"Screenshot of readr cheatsheet\"}\n\n### Reading\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n![](images/r4ds-cover.png){width=\"300\" fig-alt=\"R4DS book cover\"}\n\n:::\n\n::: {.column width=\"60%\"}\n\n<br>\n\n### R for Data Science: [Ch 11 Data import](https://r4ds.had.co.nz/data-import.html)\n\n### Package documentation: <https://readr.tidyverse.org>\n:::\n\n::::\n<!--end columns-->\n\n::: \n<!--end panels-->\n\n## readr: exercise {background-image=\"images/hex/readr.png\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Read data in\n\n#### Options 1 & 2 below will get you the same raw dataset for AdÃ©lie penguins. Try it out! {.center-x}\n\nOption 1: load using URL\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.219.3&entityid=002f3893385f710df69eeebe893144ff\")\n```\n:::\n\n\n<br>\nOption 2: load using filepath\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_csv(\"tutorial/raw_adelie.csv\")\n```\n:::\n\n\n<br>\n\n----\n\nOption 3: Lucky for us, the `palmerpenguins` ðŸ“¦ compiles data from all three species together! Check the clean data and raw data tabs to learn more.\n\n### Clean data\n\n`penguins` contains a clean dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins <- palmerpenguins::penguins\npenguins\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 Ã— 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# â„¹ 334 more rows\n# â„¹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n\n### Raw data\n\n`penguins_raw` contains the raw data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 Ã— 17\n   studyName `Sample Number` Species         Region Island Stage `Individual ID`\n   <chr>               <dbl> <chr>           <chr>  <chr>  <chr> <chr>          \n 1 PAL0708                 1 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N1A1           \n 2 PAL0708                 2 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N1A2           \n 3 PAL0708                 3 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N2A1           \n 4 PAL0708                 4 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N2A2           \n 5 PAL0708                 5 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N3A1           \n 6 PAL0708                 6 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N3A2           \n 7 PAL0708                 7 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N4A1           \n 8 PAL0708                 8 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N4A2           \n 9 PAL0708                 9 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N5A1           \n10 PAL0708                10 Adelie Penguinâ€¦ Anvers Torgeâ€¦ Adulâ€¦ N5A2           \n# â„¹ 334 more rows\n# â„¹ 10 more variables: `Clutch Completion` <chr>, `Date Egg` <date>,\n#   `Culmen Length (mm)` <dbl>, `Culmen Depth (mm)` <dbl>,\n#   `Flipper Length (mm)` <dbl>, `Body Mass (g)` <dbl>, Sex <chr>,\n#   `Delta 15 N (o/oo)` <dbl>, `Delta 13 C (o/oo)` <dbl>, Comments <chr>\n```\n:::\n:::\n\n\n:::\n<!--end panels-->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}