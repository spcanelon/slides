{
  "hash": "1fec417d83af58175bf4ee721a4aaa18",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    theme: [\"default\", \"css/rladies-spc.scss\"]\n    disable-layout: false #https://revealjs.com/config/\n    code-overflow: wrap\n    df-print: default\nexecute: \n  echo: true\n---\n\n\n# 03-ggplot2 {visibility=\"hidden\"}\n\n\n\n\n\n\n## {background-image=\"https://images.unsplash.com/photo-1591792111137-5b8219d5fad6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=4350&q=80\" background-position=\"52% 5%\" background-size=\"cover\"}\n\n![](images/drawio/03-ggplot2.png){.absolute top=30 left=30 width=\"100%\" fig-alt=\"Our illustrated penguins have reached the ggplot2 package! The photo backdrop is a snowy Antarctic wonderland featuring a Gentoo penguin with outstretched flippers\"}\n\n::: footer\n<span>Photo by <a href=\"https://unsplash.com/@eadesstudio?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">James Eades</a> on <a href=\"https://unsplash.com/collections/12240655/palmerpenguins/d5aed8c855e26061e5e651d3f180b76d?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span>\n:::\n\n---\n\n## ggplot2: info {background-image=\"images/hex/ggplot2.png\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### Overview {.center}\n\n<br><br>\n\n#### `ggplot2` uses the \"Grammar of Graphics\" and layers graphical components together to help us create a plot\n\nLet's start by making a simple plot of our data!\n\n\n### Cheatsheet\n\n{{< fa file-pdf >}} PDF: <https://github.com/rstudio/cheatsheets/raw/main/data-visualization-2.1.pdf>\n![](images/cheatsheet/03-ggplot2.png){width=100% fig-alt=\"ggplot2 cheatsheet\"}\n\n### Reading\n\n<!--start columns-->\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n![](images/r4ds-cover.png){width=\"300\" fig-alt=\"R4DS book cover\"}\n\n:::\n\n::: {.column width=\"60%\"}\n\n<br>\n\n### R for Data Science: [Ch 3 Data visualization](https://r4ds.had.co.nz/data-visualisation.html)\n\n### Package documentation: <https://ggplot2.tidyverse.org>\n:::\n\n::::\n<!--end columns-->\n\n::: \n<!--end panels-->\n\n## ggplot2: exercise {background-image=\"images/hex/ggplot2.png\" background-size=\"8%\" background-position=\"98% 4%\"}\n\n<!--start panels-->\n::: {.panel-tabset}\n\n### View the data\n\nGet a full view of the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(penguins)\n```\n:::\n\n\n<br>\nOr catch a `glimpse`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n:::\n\n\n### Scatterplot\n\nLet's see if body mass varies by penguin sex using `geom_point()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = penguins, aes(x = sex, y = body_mass_g)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2_files/figure-revealjs/scatterplot-1.png){fig-alt='A scatterplot with categorical penguin sex along the x axis and continuous body mass along the y axis. The three sex categories are female, male, and NA. The body mass appears to range between 2400g and 6500g. Because this is a scatterplot, there are various points scattered along the y axis in a line above each sex category, which doesn\\'t tell us much about these data. There are other types of plots better suited for visualizing the relationship between a continuous variable and a categorical variable.' width=960}\n:::\n:::\n\n\n### Boxplot\n\nLet's see if body mass varies by penguin sex, this time with `geom_boxplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](03-ggplot2_files/figure-revealjs/boxplot-1.png){fig-alt='A boxplot with penguin sex along the x axis and body mass along the y axis. Again, the three sex categories are female, male, and NA, and the body mass appears to range between 2400g and 6500g. Because this is a boxplot, we can visualize the minimum value, first quartile, median, third quartile, and maximum value of penguin body mass, for each penguin sex category. Female penguins have a lower median body mass than male penguins, while the NA sex category is somewhere in between the two. There are no outliers.' width=960}\n:::\n:::\n\n\n### By Species\n\nLet's see if body mass varies by penguin sex, and now fill the boxplots <br>according to penguin species\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot(aes(fill = species))\n```\n\n::: {.cell-output-display}\n![](03-ggplot2_files/figure-revealjs/by-species-1.png){fig-alt='A boxplot with penguin sex along the x axis and body mass along the y axis. Again, the three sex categories are female, male, and NA, and the body mass appears to range between 2400g and 6500g. This time, instead of one boxplot per sex category, there is a boxplot for each species, per sex category, and these are filled with different colors. Gentoo boxplots are blue, Adélie boxplots are reddish, and Chinstrap boxplots are green. Male penguins have higher body mass across species, and Gentoo penguins stand out as having higher body mass than both Chinstrap and Adélie penguins. Low body mass outliers exist for female Chinstrap penguins and NA Gentoo penguins, and high body mass outliers exist for male Chinstrap penguins. There is no boxplot for Chinstrap penguins in the NA sex category.' width=960}\n:::\n:::\n\n\n### Chat\n\n#### The boxplot filled by species helps us see...\n\n- Gentoo penguins have higher body mass than Adélie and Chinstrap penguins\n- Higher body mass among male Gentoo penguins compared to female penguins\n- Pattern not as discernible when comparing Adélie and Chinstrap penguins\n- No `NA`s among Chinstrap penguin data points! **sex** was available for each observation\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03-ggplot2_files/figure-revealjs/unnamed-chunk-4-1.png){fig-alt='Same boxplot as the previous tab. Any additional data insights are listed in the text of this slide.' width=960}\n:::\n:::\n\n\n:::\n<!--end panels-->\n",
    "supporting": [
      "03-ggplot2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}